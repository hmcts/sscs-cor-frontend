{
  "name": "sscs-cor-frontend",
  "description": "Continuous Online Resolution",
  "version": "0.0.1",
  "private": true,
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "start": "node dist/server/server",
    "dev": "cross-env yarn build:dev && cross-env TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=development nodemon",
    "dev-docker": "concurrently \"yarn build:dev && cross-env TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=docker nodemon\" \"yarn mock-api\"",
    "dev-mock-api": "concurrently \"yarn dev\" \"yarn mock-api\"",
    "mock-api": "node test/mock/s2s/server & node test/mock/tribunals/server",
    "mock-idam-api": "dyson test/mock/idam/services/ 8082",
    "build": "yarn build:prod && yarn transpile",
    "build:dev": "yarn build-sass && yarn build-js:dev",
    "build:prod": "yarn build-sass && yarn build-js",
    "build-sass": "node-sass app/client/sass/application.scss public/css/main.css --output-style compressed",
    "build-js": "browserify ./app/client/javascript/main.ts -p [ tsify -p app/client ] | uglifyjs -c > ./public/js/main.js",
    "build-js:dev": "browserify ./app/client/javascript/main.ts -p [tsify -p app/client] --debug -o ./public/js/main.js ",
    "test": "yarn test:unit && yarn test:integration",
    "test:unit": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=test nyc mocha --exit --recursive --require jsdom-global/register \"test/unit/*.ts\" \"test/unit/**/*.ts\"",
    "test:unit-server": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=test mocha test/unit/*.ts test/unit/**/*.ts",
    "test:unit-client": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/client/tsconfig.json NODE_ENV=test mocha --require jsdom-global/register test/unit/client/**/*.ts",
    "test:browser": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=test mocha test/browser/**/*.ts --colors --reporter mochawesome  --reporter-options reportDir=functional-output/reports/functional,inlineAssets=true --exit",
    "test:integration": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=test mocha test/integration/**/*.ts --exit",
    "test:mutation": "cross-env NODE_CONFIG_DIR=./config stryker run",
    "test:functional": "yarn test:browser --grep @mya",
    "fortifyScan": "./test/java/gradlew -p test/java fortifyScan",
    "test:nightly": "yarn test:browser --grep @nightly",
    "test:fullfunctional": "yarn test:nightly",
    "test:smoke": "cross-env NODE_PATH=. TS_NODE_PROJECT=app/server/tsconfig.json NODE_ENV=test mocha test/smoke/*.ts --grep @smoke --colors --reporter mochawesome  --reporter-options reportDir=smoke-output/reports/smoke,inlineAssets=true --exit",
    "test:audit": "./bin/run-yarn-audit.sh -f yarn-audit-known-issues",
    "test:crossbrowser": "cross-env SSCS_API_URL=http://sscs-tribunals-api-aat.service.core-compute-aat.internal IDAM_API_URL=https://idam-api.aat.platform.hmcts.net S2S_URL=http://rpe-service-auth-provider-aat.service.core-compute-aat.internal S2S_OAUTH2_URL=https://idam-api.aat.platform.hmcts.net NODE_PATH=. NODE_ENV=test codeceptjs run-multiple ${BROWSER_GROUP:-'--all'} -c test/crossbrowser/saucelabs.conf.js --steps --reporter mocha-multi --verbose",
    "test:coverage": "nyc report",
    "test:a11y": "yarn -v it will run as part of functional test",
    "test:all": "yarn test && yarn test:coverage",
    "sonar-scan": "sonar-scanner -Dsonar.exclusions=app/server/app.ts,app/server/controllers/content.js,app/core/contentLookup.js,app/server/controllers/notificationRedirect.js,app/server/controllers/validateEmail.js,app/server/controllers/question.ts,app/server/setLanguage.ts,app/core/tyaNunjucks.js,app/server/controllers/idam-stub.ts,app/server/middleware/health.ts -Dsonar.javascript.lcov.reportPaths=test/coverage/html/lcov.info",
    "transpile": "yarn tsc -p ./app/server/tsconfig.json",
    "lint": "yarn eslint ."
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hmcts/sscs-cor-frontend.git"
  },
  "husky": {
    "hooks": {
      "pre-commit": "yarn lint"
    }
  },
  "dependencies": {
    "@hmcts/ctsc-web-chat": "^0.3.12",
    "@hmcts/nodejs-healthcheck": "^1.8.0",
    "@hmcts/nodejs-logging": "^4.0.4",
    "@hmcts/properties-volume": "^0.0.14",
    "@types/express": "^4.17.17",
    "@types/express-serve-static-core": "^4.17.33",
    "applicationinsights": "^2.5.1",
    "applicationinsights-native-metrics": "^0.0.9",
    "axios": "^1.3.5",
    "body-parser": "^1.20.2",
    "chokidar": "^3.5.3",
    "cmc-cookies-manager": "^1.0.6",
    "computed-style": "^0.3.0",
    "config": "^3.3.9",
    "connect-redis": "^7.0.1",
    "cookie-parser": "^1.4.6",
    "csurf": "^1.11.0",
    "eslint-plugin-mocha": "^10.1.0",
    "express": "^4.18.2",
    "express-session": "^1.17.3",
    "govuk-elements-sass": "^3.1.3",
    "govuk-frontend": "^4.5.0",
    "govuk_template_jinja": "^0.26.0",
    "helmet": "^6.1.5",
    "helmet-csp": "^3.4.0",
    "http-status-codes": "^2.2.0",
    "i": "^0.3.7",
    "i18next": "^22.4.14",
    "i18next-conv": "^13.1.1",
    "i18next-express-middleware": "^2.0.0",
    "i18next-sprintf-postprocessor": "^0.2.2",
    "ioredis": "^5.3.1",
    "joi": "^17.9.1",
    "jquery": "^3.6.4",
    "json5": "^2.2.3",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^3.3.1",
    "node-sass": "^8.0.0",
    "nunjucks": "^3.2.3",
    "otp": "^1.1.0",
    "promise-request-retry": "^1.0.2",
    "proxyquire": "^2.1.3",
    "referrer-policy": "^1.2.0",
    "reload": "^3.2.1",
    "request-promise": "^4.2.6",
    "serve-favicon": "^2.5.0",
    "shelljs": "^0.8.5",
    "superagent": "^8.0.9"
  },
  "devDependencies": {
    "@hmcts/eslint-config": "^1.4.0",
    "@stryker-mutator/core": "^6.4.2",
    "@stryker-mutator/mocha-runner": "^6.4.2",
    "@types/chai": "^4.3.4",
    "@types/chai-as-promised": "^7.1.5",
    "@types/chai-string": "^1.4.2",
    "@types/cli-color": "^2.0.2",
    "@types/config": "^3.3.0",
    "@types/connect-redis": "^0.0.20",
    "@types/cookie-parser": "^1.4.3",
    "@types/joi": "^17.2.3",
    "@types/jquery": "^3.5.16",
    "@types/mocha": "^10.0.1",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.15.11",
    "@types/nunjucks": "^3.2.2",
    "@types/shelljs": "^0.8.11",
    "@types/sinon": "^10.0.13",
    "@types/sinon-chai": "^3.2.9",
    "@typescript-eslint/eslint-plugin": "^5.58.0",
    "@typescript-eslint/parser": "^5.58.0",
    "browserify": "^17.0.0",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-http": "^4.3.0",
    "chai-string": "^1.5.0",
    "cli-color": "^2.0.3",
    "codeceptjs": "^3.4.1",
    "concurrently": "^8.0.1",
    "cross-env": "^7.0.3",
    "domready": "^1.0.8",
    "dyson": "^4.1.0",
    "eslint": "^8.38.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-nibble": "^8.1.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsdoc": "^41.1.1",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.1.1",
    "husky": "^8.0.3",
    "jsdom": "^21.1.1",
    "jsdom-global": "^3.0.2",
    "memory-cache": "^0.2.0",
    "mocha": "^10.2.0",
    "mocha-multi": "^1.1.7",
    "mocha-param": "^2.0.1",
    "mochawesome": "^7.1.3",
    "nock": "^13.3.0",
    "nodemon": "^2.0.22",
    "nyc": "^15.1.0",
    "pa11y": "^6.2.3",
    "prettier": "^2.8.7",
    "puppeteer": "^19.8.5",
    "sinon": "^15.0.3",
    "sinon-chai": "^3.7.0",
    "sonar-scanner": "^3.1.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "tsify": "^5.0.4",
    "typescript": "^5.0.4",
    "uglify-js": "^3.17.4",
    "uglifyjs": "^2.4.11",
    "uuid": "^9.0.0",
    "webdriverio": "^8.8.1"
  },
  "resolutions": {
    "http-cache-semantics": "^4.1.1",
    "cookiejar": "^2.1.4"
  },
  "typeScriptVersion": "4.8"
}
