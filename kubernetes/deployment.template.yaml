apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        env:
        - name: SSCS_API_URL
          value: http://sscs-cor-backend-aat.service.core-compute-aat.internal
        - name: IDAM_URL
          value: "https://idam.preprod.ccidam.reform.hmcts.net/login"
        - name: IDAM_API_URL
          value: "https://preprod-idamapi.reform.hmcts.net:3511"
        - name: IDAM_CLIENT_SECRET
          value: "${IDAM_CLIENT_SECRET}"
        - name: S2S_URL
          value: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        - name: S2S_SECRET
          value: "${S2S_SECRET}"
        - name: REDIS_URL
          value: redis://redis
        - name: SESSION_SECRET
          value:
        - name: NODE_ENV
          value: preview
        - name: HTTP_PROTOCOL
          value: http
        - name: IDAM_ENABLE_STUB
          value: "true"
        - name: EVIDENCE_UPLOAD_QUESTION_PAGE_OVERRIDE_ALLOWED
          value: "true"
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:4-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379

        livenessProbe:
          initialDelaySeconds: 1
          periodSeconds: 1
          exec:
            command:
            - redis-cli
            - ping

        readinessProbe:
          initialDelaySeconds: 1
          periodSeconds: 1
          exec:
            command:
            - redis-cli
            - ping
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
